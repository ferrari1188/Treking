       <div id="map" data-coords2="<%= @coordinates %>">
          <script>
            const coordsRoute = JSON.parse(document.getElementById("map").dataset.coords2)
            mapboxgl.accessToken = 'pk.eyJ1IjoiYWxleDI1MTk0IiwiYSI6ImNrczh1cTEzdzFxZ3AydXBoOWdnNHl6eWkifQ.PElLesF9Sva6VWgHD5mabQ';
            const map = new mapboxgl.Map({
              container: 'map', // Specify the container ID
              style: 'mapbox://styles/mapbox/streets-v11', // Specify which map style to use
              center: coordsRoute[16], // Specify the starting position
              zoom: 12, // Specify the starting zoom
              interactive: true
            })

            function updateRoute() {
              // Set the profile
              const profile = 'walking';
              const newCoords = coordsRoute.join(';');
              // Set the radius for each coordinate pair to 25 meters
              const radius = coordsRoute.map(() => 25);
              getMatch(newCoords, radius, profile);
            }

            // Make a Map Matching request
            async function getMatch(coordinates, radius, profile) {
              // Separate the radiuses with semicolons
              const radiuses = radius.join(';');
              // Create the query
              const query = await fetch(
                `https://api.mapbox.com/matching/v5/mapbox/${profile}/${coordinates}?geometries=geojson&radiuses=${radiuses}&steps=true&access_token=pk.eyJ1IjoiYWxleDI1MTk0IiwiYSI6ImNrczh1cTEzdzFxZ3AydXBoOWdnNHl6eWkifQ.PElLesF9Sva6VWgHD5mabQ`,
                { method: 'GET' }
              );
              const data = await query.json();
              // Get the coordinates from the response
              const coords = data.matchings[0].geometry;
              console.log(coords);
    };
            updateRoute();
          </script>
        </div>
